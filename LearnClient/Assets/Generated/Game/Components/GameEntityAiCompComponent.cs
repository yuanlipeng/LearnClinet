//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public EntityAiComp entityAiComp { get { return (EntityAiComp)GetComponent(GameComponentsLookup.EntityAiComp); } }
    public bool hasEntityAiComp { get { return HasComponent(GameComponentsLookup.EntityAiComp); } }

    public void AddEntityAiComp(float newScopeX, float newScopeY, bool newIsAIEnded) {
        var index = GameComponentsLookup.EntityAiComp;
        var component = (EntityAiComp)CreateComponent(index, typeof(EntityAiComp));
        component.ScopeX = newScopeX;
        component.ScopeY = newScopeY;
        component.IsAIEnded = newIsAIEnded;
        AddComponent(index, component);
    }

    public void ReplaceEntityAiComp(float newScopeX, float newScopeY, bool newIsAIEnded) {
        var index = GameComponentsLookup.EntityAiComp;
        var component = (EntityAiComp)CreateComponent(index, typeof(EntityAiComp));
        component.ScopeX = newScopeX;
        component.ScopeY = newScopeY;
        component.IsAIEnded = newIsAIEnded;
        ReplaceComponent(index, component);
    }

    public void RemoveEntityAiComp() {
        RemoveComponent(GameComponentsLookup.EntityAiComp);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEntityAiComp;

    public static Entitas.IMatcher<GameEntity> EntityAiComp {
        get {
            if (_matcherEntityAiComp == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EntityAiComp);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEntityAiComp = matcher;
            }

            return _matcherEntityAiComp;
        }
    }
}
