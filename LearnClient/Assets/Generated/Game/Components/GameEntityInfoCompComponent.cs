//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public EntityInfoComp entityInfoComp { get { return (EntityInfoComp)GetComponent(GameComponentsLookup.EntityInfoComp); } }
    public bool hasEntityInfoComp { get { return HasComponent(GameComponentsLookup.EntityInfoComp); } }

    public void AddEntityInfoComp(int newId, EntityType newEntityType, int newConfigId) {
        var index = GameComponentsLookup.EntityInfoComp;
        var component = (EntityInfoComp)CreateComponent(index, typeof(EntityInfoComp));
        component.Id = newId;
        component.EntityType = newEntityType;
        component.ConfigId = newConfigId;
        AddComponent(index, component);
    }

    public void ReplaceEntityInfoComp(int newId, EntityType newEntityType, int newConfigId) {
        var index = GameComponentsLookup.EntityInfoComp;
        var component = (EntityInfoComp)CreateComponent(index, typeof(EntityInfoComp));
        component.Id = newId;
        component.EntityType = newEntityType;
        component.ConfigId = newConfigId;
        ReplaceComponent(index, component);
    }

    public void RemoveEntityInfoComp() {
        RemoveComponent(GameComponentsLookup.EntityInfoComp);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEntityInfoComp;

    public static Entitas.IMatcher<GameEntity> EntityInfoComp {
        get {
            if (_matcherEntityInfoComp == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EntityInfoComp);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEntityInfoComp = matcher;
            }

            return _matcherEntityInfoComp;
        }
    }
}
